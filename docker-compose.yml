services:
  class-control-app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: ${APP_NAME}-app
    volumes:
      - .:/app
    ports:
      - ${GOLANG_PORT}:8081
    depends_on:
      postgres-class-control:
        condition: service_healthy
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_NAME=${DB_NAME}
      - APP_ENV=${APP_ENV}
    networks:
      - app-network

  postgres-class-control:
    hostname: postgres
    container_name: ${APP_NAME}-db
    image: postgres:latest
    ports:
      - ${DB_EXTERNAL_PORT:-5433}:5432
    volumes:
      - app-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - app-network

volumes:
  app-data:

networks:
  app-network:
    driver: bridge
